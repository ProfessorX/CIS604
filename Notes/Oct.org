* October, 2014

** 20141001

*** Unit Resolution rule
    - (and (or p q) (not q)) ; if we want the result to be true, the
      only way is (p #t)
    - (and (or (l1 l2 l3 ... lk)) m)
    - (A<->B) == (and (A->B) (B->A))
    - (A->B) == (or (not A) B)

*** Resolution
    - Resolution is sound and complete.
       

*** Propositional logic reasoning 
    - resolution rule
    - conjunctive normal form
    - resolution algorithm[fn:1] The logic gate and similar things in
      Digital Circuits will help.

** 20141008

*** Outline
    - KB = conjunction of horn clauses
    - 
 
*** Forward chaining

*** Backward chaining
    - "Does it run backward?"
    - It is the same as with iteration v.s. recursion.
    -

*** DPLL algorithm
    - early termination
    - Pure symbol heuristic
    - unit clause heuristic

*** The WalkSAT algorithm
    - Start from a complete assignment
    - Iterate
    - *Min-conflict heuristic* Pick the ne that minimizes the number
      of unsatisfied clauses
    - It's just a balance between greediness and randomness

*** Hard satisfiability problem
    -

** 20141011 Predicate Logic

*** Quantifiers
    - (for-each )
    - #:exist
    - FOL is just another way of saying /Predicate Logic/.
    -

*** Semantics of a FOL Language
    -

*** Semantics of FOL Formulas
    - Just the same as in "ordinary" logic
    -

** 20141015 Inference with First Order Logic

*** Universal instantiation
    - A /term/ is something that refers to an object
    - Existential instantiation
    -

*** Unification
    - If we can find a substitution such that (Unify alpha, beta) =
      theta (= atheta b theta) ==> #t
    - The unification algorithm
      - Compare the structures of the inputs, element by element. 

*** The unification algorithm
    -

*** Forward-chaining algorithm
    -

*** backward-chaining algorithm
    - 




* Footnotes

[fn:1] https://en.wikipedia.org/wiki/Logic_gate


